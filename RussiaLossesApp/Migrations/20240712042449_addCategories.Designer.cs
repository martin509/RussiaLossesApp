// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RussiaLossesApp.Data;

#nullable disable

namespace RussiaLossesApp.Migrations
{
    [DbContext(typeof(LossObjectContext))]
    [Migration("20240712042449_addCategories")]
    partial class addCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RussiaLossesApp.Models.EquipCategory", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("EquipCategory");
                });

            modelBuilder.Entity("RussiaLossesApp.Models.EquipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EquipCategoryName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipCategoryName");

                    b.ToTable("EquipType");
                });

            modelBuilder.Entity("RussiaLossesApp.Models.LossObject", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("EquipTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("geo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lost_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nearest_location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipTypeId");

                    b.ToTable("LossObject");
                });

            modelBuilder.Entity("RussiaLossesApp.Models.EquipType", b =>
                {
                    b.HasOne("RussiaLossesApp.Models.EquipCategory", null)
                        .WithMany("EquipTypes")
                        .HasForeignKey("EquipCategoryName");
                });

            modelBuilder.Entity("RussiaLossesApp.Models.LossObject", b =>
                {
                    b.HasOne("RussiaLossesApp.Models.EquipType", "EquipType")
                        .WithMany()
                        .HasForeignKey("EquipTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipType");
                });

            modelBuilder.Entity("RussiaLossesApp.Models.EquipCategory", b =>
                {
                    b.Navigation("EquipTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
