@using System.Text

@{
}
<head>
    <link rel="stylesheet" href="stylesheet.css">
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

</head>
<partial name="/Views/Fragments/dateselector.cshtml" />
<partial name="/Views/Fragments/graphselector.cshtml" />
<h1>Loss report for @TempData["month"]</h1>
<table>
    <thead>
        @if (TempData["month"] != null)
        {
        <th>Type</th>
        <th></th>
        }
    </thead>
    <tbody>
        @foreach ((string, float[]) graphObj in Model)
        {
            <tr>
                <td>@graphObj.Item1</td>
                @foreach(float i in graphObj.Item2)
                {
                    <td>@i</td>
                }

            </tr>
        }
    </tbody>
</table>
<canvas id="theChart" width="300" height="200"></canvas>
<script>
    var context = document.getElementById('theChart');
    var n = @Model.Count;
    const theChart = new Chart(context, {
        type: 'line',
        data: {
            labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
            datasets: []
        }
    });
    
    var colours = new Array(n);
    for (var i = 0; i < n; i++) {
        var hue = Math.floor((360 * i / n) + 10 ) % 360;
        colours[i] = 'hsl(' + hue + ', 100%, 50%)';
    }
    for (var i = n - 1; i > 0; i--) {
        var j = Math.floor(Math.random() * (i + 1));
        var temp = colours[i];
        colours[i] = colours[j];
        colours[j] = temp;
    }
</script>

    
@foreach ((string, float[]) item in Model)
{
    <script>
        var colour = colours[@Model.IndexOf(item)];
        theChart.data.datasets.push({
            label: '@($"{item.Item1}")',
            data: @($"[{string.Join(",", item.Item2)}]"),
            borderColor: colour
        });
        theChart.update();
    </script>
}

